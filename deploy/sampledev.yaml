# Important: do not use in production environments
# Create a service account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aes-sample-iot-device
  namespace: azure-iot-operations
---
# Creates a pod with mosquitto-clients and mqttui utilities in your cluster
apiVersion: v1
kind: Pod
metadata:
  name: aes-sample-iot-device
  # The namespace must match the IoT MQ BrokerListener's namespace
  # Otherwise use the long hostname: aio-broker.azure-iot-operations.svc.cluster.local
  namespace: azure-iot-operations
spec:
  # Use the "mqtt-client" service account which comes with default deployment
  # Otherwise create it with `kubectl create serviceaccount mqtt-client -n azure-iot-operations`
  serviceAccountName: aes-sample-iot-device
  containers:
    # Install mosquitto and mqttui utilities on Alpine linux
  - image: capzacr.azurecr.io/sample_dev:latest
    imagePullPolicy: Always
    name: aes-sample-iot-device
    #command: ["sh", "-c"]
    #args: ["sleep infinity"]
    command: ["python3"]
    args: ["sampledev.py", "-s", "aio-broker", "-p", "18885", "-c", "/var/run/certs/ca.crt"]
    resources:
      limits:
        cpu: 500m
        memory: 200Mi
      requests:
        cpu: 100m
        memory: 100Mi
    volumeMounts:
    - name: trust-bundle
      mountPath: /var/run/certs
  volumes:
  - name: trust-bundle
    configMap:
      name: azure-iot-operations-aio-ca-trust-bundle # Default root CA cert
